version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-puntog}
      POSTGRES_USER: ${POSTGRES_USER:-puntog}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # UI
      - "14268:14268" # API

  debezium-connect:
    image: debezium/connect:2.5
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - rabbitmq
    environment:
      BOOTSTRAP_SERVERS: 'kafka:9092' # Placeholder
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
    volumes:
      - ./ops/debezium:/kafka/connect

  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    container_name: api-gateway
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - redemption-service
      - station-service
      - ad-engine
      - raffle-service
      - jaeger
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: auth-service
    env_file:
      - .env
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - redis
      - jaeger

  redemption-service:
    build:
      context: .
      dockerfile: services/redemption-service/Dockerfile
    container_name: redemption-service
    env_file:
      - .env
    ports:
      - "8082:8080"
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - jaeger

  station-service:
    build:
      context: .
      dockerfile: services/station-service/Dockerfile
    container_name: station-service
    env_file:
      - .env
    depends_on:
      - postgres
      - jaeger
    environment:
      - POSTGRES_HOST=postgres
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317

  ad-engine:
    build:
      context: .
      dockerfile: services/ad-engine/Dockerfile
    container_name: ad-engine
    env_file:
      - .env
    ports:
      - "8084:8080"
    depends_on:
      - postgres
      - jaeger

  raffle-service:
    build:
      context: .
      dockerfile: services/raffle-service/Dockerfile
    container_name: raffle-service
    env_file:
      - .env
    ports:
      - "8085:8080"
    depends_on:
      - postgres
      - jaeger
    environment:
      - POSTGRES_HOST=postgres
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317

volumes:
  postgres_data:
  redis_data: